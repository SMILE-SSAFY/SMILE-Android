//querydsl 추가
buildscript {
    ext {
        queryDslVersion = "5.0.0"
        springBootVersion = '2.7.7'
    }
    repositories {
        maven {url 'https://repo.spring.io/release'}
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'

    //querydsl 추가
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

allprojects {}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.ssafy'
    version = '1.0'
    sourceCompatibility = '11'
    compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()

        flatDir {
            dirs 'libs'
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation('org.projectlombok:lombok')
        implementation 'io.jsonwebtoken:jjwt:0.9.1'
        implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
        implementation 'com.vladmihalcea:hibernate-types-52:2.16.2'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'io.github.bootpay:backend:+'

        // Add querydsl
        implementation 'com.querydsl:querydsl-jpa'
//        implementation 'com.querydsl:querydsl-apt'
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"

        // Add nurigo
        implementation 'net.nurigo:sdk:4.1.3'

        //  retrofit2
        implementation 'com.squareup.retrofit2:adapter-rxjava2:2.7.2'

        // smile-clustering
        implementation 'com.github.haifengl:smile-core:3.0.0'

        // redis
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'

        // firebase
        implementation("com.google.firebase:firebase-admin:9.1.1")
        implementation("com.squareup.okhttp3:okhttp:4.10.0")

    }
}

project(":core-module") {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    bootJar.enabled = false
    jar.enabled = true

    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])
    }
}

project(":api-module") {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'

    bootJar {
        archivesBaseName = 'ssafy'
        archiveFileName = "ssafy-api-module-0.0.1.jar"
        archiveVersion = "0.0.1"
    }
    dependencies {
        implementation project(':core-module')
        implementation fileTree(dir: 'libs', include: ['*.jar'])
    }
}

project(':batch-module') {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'

    bootJar {
        archivesBaseName = 'ssafy'
        archiveFileName = "ssafy-batch-module-0.0.1.jar"
        archiveVersion = "0.0.1"
    }
    dependencies {
        implementation project(':core-module')
        implementation fileTree(dir: 'libs', include: ['*.jar'])
    }
}

/*
 * queryDSL 설정 추가
 */
// querydsl에서 사용할 경로 설정
def querydslDir = "$buildDir/generated/querydsl"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
// build 시 사용할 sourceSet 추가
sourceSets {
    main.java.srcDir querydslDir
}
// querydsl 이 compileClassPath 를 상속하도록 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}